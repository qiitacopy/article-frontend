/* eslint-disable */
// source: article.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf')
var goog = jspb
var global = Function('return this')()

goog.exportSymbol('proto.grpc.Article', null, global)
goog.exportSymbol('proto.grpc.CreateArticleRequest', null, global)
goog.exportSymbol('proto.grpc.GetByIDRequest', null, global)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.GetByIDRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.grpc.GetByIDRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.GetByIDRequest.displayName = 'proto.grpc.GetByIDRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.CreateArticleRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.grpc.CreateArticleRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.CreateArticleRequest.displayName =
    'proto.grpc.CreateArticleRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.Article = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.grpc.Article, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.Article.displayName = 'proto.grpc.Article'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.grpc.GetByIDRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.grpc.GetByIDRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.grpc.GetByIDRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.grpc.GetByIDRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.GetByIDRequest}
 */
proto.grpc.GetByIDRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.grpc.GetByIDRequest()
  return proto.grpc.GetByIDRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.GetByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.GetByIDRequest}
 */
proto.grpc.GetByIDRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.GetByIDRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.grpc.GetByIDRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.GetByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.GetByIDRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getId()
  if (f !== 0) {
    writer.writeInt32(1, f)
  }
}

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.grpc.GetByIDRequest.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.grpc.GetByIDRequest} returns this
 */
proto.grpc.GetByIDRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.grpc.CreateArticleRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.grpc.CreateArticleRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.grpc.CreateArticleRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.grpc.CreateArticleRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        username: jspb.Message.getFieldWithDefault(msg, 1, ''),
        title: jspb.Message.getFieldWithDefault(msg, 2, ''),
        text: jspb.Message.getFieldWithDefault(msg, 3, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.CreateArticleRequest}
 */
proto.grpc.CreateArticleRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.grpc.CreateArticleRequest()
  return proto.grpc.CreateArticleRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.CreateArticleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.CreateArticleRequest}
 */
proto.grpc.CreateArticleRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setUsername(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setTitle(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setText(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.CreateArticleRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.grpc.CreateArticleRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.CreateArticleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.CreateArticleRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getUsername()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getTitle()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getText()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
}

/**
 * optional string username = 1;
 * @return {string}
 */
proto.grpc.CreateArticleRequest.prototype.getUsername = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.CreateArticleRequest} returns this
 */
proto.grpc.CreateArticleRequest.prototype.setUsername = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string title = 2;
 * @return {string}
 */
proto.grpc.CreateArticleRequest.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.CreateArticleRequest} returns this
 */
proto.grpc.CreateArticleRequest.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string text = 3;
 * @return {string}
 */
proto.grpc.CreateArticleRequest.prototype.getText = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.CreateArticleRequest} returns this
 */
proto.grpc.CreateArticleRequest.prototype.setText = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.grpc.Article.prototype.toObject = function (opt_includeInstance) {
    return proto.grpc.Article.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.grpc.Article} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.grpc.Article.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
        username: jspb.Message.getFieldWithDefault(msg, 2, ''),
        title: jspb.Message.getFieldWithDefault(msg, 3, ''),
        text: jspb.Message.getFieldWithDefault(msg, 4, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 5, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 6, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.Article}
 */
proto.grpc.Article.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.grpc.Article()
  return proto.grpc.Article.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.Article} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.Article}
 */
proto.grpc.Article.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setUsername(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setTitle(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setText(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setCreatedAt(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setUpdatedAt(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.Article.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.grpc.Article.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.Article} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.Article.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getId()
  if (f !== 0) {
    writer.writeInt32(1, f)
  }
  f = message.getUsername()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getTitle()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getText()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getCreatedAt()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getUpdatedAt()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
}

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.grpc.Article.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.grpc.Article} returns this
 */
proto.grpc.Article.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * optional string username = 2;
 * @return {string}
 */
proto.grpc.Article.prototype.getUsername = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.Article} returns this
 */
proto.grpc.Article.prototype.setUsername = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string title = 3;
 * @return {string}
 */
proto.grpc.Article.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.Article} returns this
 */
proto.grpc.Article.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string text = 4;
 * @return {string}
 */
proto.grpc.Article.prototype.getText = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.Article} returns this
 */
proto.grpc.Article.prototype.setText = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string created_at = 5;
 * @return {string}
 */
proto.grpc.Article.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.Article} returns this
 */
proto.grpc.Article.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string updated_at = 6;
 * @return {string}
 */
proto.grpc.Article.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.grpc.Article} returns this
 */
proto.grpc.Article.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

goog.object.extend(exports, proto.grpc)
